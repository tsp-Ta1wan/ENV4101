# Template for creating a new .properties, and explanation of each parameter
# The global explanation of the system is included in the Readme.md

# These two values are displayed on the graph : the name of the system, and the lifetime limit (in years)
SmartSystem = nameOfTheSystem
systemLifetime = xx

# You can choose between two units to enter the data.
# If you put embodied = greyEnergy, every GHG_embodied have to be in MJ. 
# If you choose embodied = CO2, every GHG_embodied have to be in kg eq CO2. 
# In that case, you also have to precise an electricityCarbonIntensity, to convert the electrical energy to eq CO2. 

#embodied= greyEnergy
embodied = CO2

# Energy mix source : https://app.electricitymaps.com/zone/FR
# Unit : g eq CO2 / kWh
electricityCarbonIntensity = xx

# The timeGainPercentage is the percentage of time of use saved thanks to the smart layer.
# For example, if the lights are on for 8h without the smart layer and 6h with the smart layer, the timeGainPercentage is 0.25.
# Used to calculate of electrical energy saved by the smart system. (0-1)
timeGainPercentage = xx 
# The timeGainPercentage is the percentage of time the system is running without the smart layer.
# For example, if the lights are on for 8h a day, the activityPercentage is 0.33.
# Used to calculate of electrical energy saved by the smart system. (0-1)
activityPercentage = xxx

# Define the components of the system: specify a name and a number of items.
# You can have more than one type of element for the same component, just use a , to separate them.
sensors = capteur_d_industrie, sensor2Name
sensorsNb = 8,6

hubs = google_home
hubsNb = 1

items = bulb
itemsNb = 10

batteries = AAA
batteriesNb = 14




# Sensor
# Sensors only cost embodied energy because they need batteries to operate.
# These values are used in the embodied cost and in the maintenance cost. 
# Per year, it counts in the maintenance cost for GHG_embodied / lifetime.
# 	Units : kg eq CO2
sensor.capteur_d_industrie.GHG_embodied = 3.75

# 	Units : years
sensor.capteur_d_industrie.lifetime = 3


# Sensor 2, for example
# 	Units : kg eq CO2
sensor.sensor2Name.GHG_embodied = 10

# 	Units : years
sensor.sensor2Name.lifetime = 8

# Hub
# As other materials, hubs GHG_embodied and lifetime parameters are used to calculate the embodied cost and the maintenance cost.
# The powerActive is used to calculate the energyOperation, i.e. the energy used for the smart layer.
# 	Units : W
hub.google_home.powerActive = 3.1

# 	Units : kg eq CO2
hub.google_home.GHG_embodied = 34.2

# 	Units : years 
hub.google_home.lifetime = 4


# Item
# As other materials, items GHG_embodied and lifetime parameters are used to calculate the embodied cost and the maintenance cost.
# PowerSleep is used to calculate the energyOperation, i.e. the energy used for the smart layer.
# PowerActive is the power of the item when it is switched on, and is used to calculate how much electrical energy can be saved due to the smart layer.
# 	Units : W
item.bulb.powerActive = 9
item.bulb.powerSleep = 0.5

# 	Units : kg eq CO2
item.bulb.GHG_embodied = 3

# 	Units : years
item.bulb.lifetime = 8



# Battery
# As sensors, batteries are a raw material that only costs embodied energy.
# 	Units : kg eq CO2
battery.AAA.GHG_embodied = 0.065

# 	Units : years
battery.AAA.lifetime = 1
